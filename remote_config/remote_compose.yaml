services:
  server:
    image: ${SERVER_IMAGE}
    container_name: vllm-server-${MODEL_SPECS}


    volumes:
      - ${SERV_VOL}
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s


    devices:
      - "nvidia.com/gpu=all"

    tty: true  # required for jetson ollama base image, since it's using bash as its entrypoint without an open stdin bash would exit
    stdin_open: true  # required for jetson ollama base image
    restart: unless-stopped

    command:
      - "vllm"
      - "serve"
      - "${MODEL_NAME}"


  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    depends_on:
      server:
        condition: service_healthy
    container_name: vllm-client-${MODEL_SPECS}
    environment:

      - HOST=http://vllm-server-${MODEL_SPECS}:8000

      - CLIENT_TYPE=${MODEL_NAME}
    tty: true

  container-stats:
    image: quay.io/navidys/prometheus-podman-exporter
    depends_on:
      - server
    container_name: container-stats
    environment:
      - CONTAINER_HOST=unix:///tmp/podman.sock
 
    security_opt:
      - "label=disable"
    volumes:
      - ${HOST_SOCK}:/tmp/podman.sock
    ports:
      - "9882:9882"

  node-exporter:
    image: docker.io/prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    volumes:
      - /:/host:ro,rslave # jetson
    command:
      - '--path.rootfs=/host' # jetson
      - '--no-collector.thermal_zone'

# jetson exporter
  jetson_stats_node_exporter:
    build:
      context: .
      dockerfile: Dockerfile.jsnode
    container_name: jetson_stats_node_exporter
    restart: unless-stopped
    depends_on:
      - jetson_stats
    volumes:
      - "/run:/run"

  jetson_stats:
    build:
      context: .
      dockerfile: Dockerfile.jstats
    container_name: jetson_stats
    restart: unless-stopped
    volumes:
      - "/run:/run"
      - "/etc/fstab:/etc/fstab:ro"
      - "/sys:/sys"
    pid: host
    privileged: true

  prometheus:
    build:
      context: .
      dockerfile: Dockerfile.promremote
    container_name: prometheus
    restart: unless-stopped
      #- ./prometheus.yml:/etc/prometheus/prometheus.yml
      #- prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      #- '--log.level=error'

volumes:

  vllm_cache:

  #prometheus_data: {}

x-podman:
  in_pod: false